{"version":3,"sources":["images/logo.svg","images/Success.svg","images/Unsuccess.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","utils/api.js","utils/auth.js","components/PopupWithForm.js","components/ImagePopup.js","components/InfoTooltip.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/Login.js","components/Register.js","components/ProtectedRoute.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","src","logo","alt","path","to","user","onClick","onSignOut","CurrentUserContext","React","createContext","Card","currentUser","useContext","isOwn","card","owner","_id","cardTrashButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","key","link","name","onCardLike","length","type","onCardDelete","Main","avatar","onEditAvatar","onEditProfile","aria-label","about","onAddPlace","cards","map","item","onCardClick","Footer","api","options","this","baseUrl","headers","fetch","then","res","ok","json","Promise","reject","status","catch","err","console","log","input","method","body","JSON","stringify","author","cardId","authorization","BASE_URL","PopupWithForm","isOpen","noValidate","onSubmit","title","children","buttonName","id","onClose","ImagePopup","InfoTooltip","isLoggedIn","successPic","unsuccessPic","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","required","minLength","maxLength","pattern","placeholder","defaultValue","onChange","target","value","EditAvatarPopup","avaRef","useRef","setAvatar","onUpdateAvatar","current","ref","AddPlacePopup","inputName","inputLink","onUpdatePlace","Login","email","setEmail","password","setPassword","onLogin","Register","onSignup","ProtectedRoute","Component","component","loggedIn","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","setLoggedIn","setUser","history","useHistory","selectedCard","setSelectedCard","setCards","setCurrentUser","handleInfoTooltip","closePopups","all","getUserInfo","getInitialCards","initialCards","tokenCheck","token","jwt","localStorage","getItem","data","push","Provider","removeItem","deleteCard","newCards","filter","c","deleteLike","putLike","newCard","Auth","setItem","changeAvatar","newData","changeProfileInfo","addNewCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a33dc72d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.aa3e7ad2.svg\";","module.exports = __webpack_public_path__ + \"static/media/Success.e38b395c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Unsuccess.4072126c.svg\";","import React from 'react';\nimport logo from '../images/logo.svg';\nimport { NavLink, Route } from 'react-router-dom';\n\n\nfunction Header(props) {\n    return (\n        <header className=\"header\">\n            <img src={logo} className=\"header__logo\" alt=\"Место\" />\n            <nav className=\"header__nav\">\n                <Route path=\"/sign-up\">\n                    <NavLink to='/sign-in' className=\"header__nav-link\">Войти</NavLink>\n                </Route>\n                <Route path=\"/sign-in\">\n                    <NavLink to='/sign-up' className=\"header__nav-link\">Зарегистрироваться</NavLink>\n                </Route>\n                <Route path=\"/cards\">\n                    <p className=\"header__email-info\">{props.user}</p>\n                    <button onClick={props.onSignOut} className=\"header__nav-link\">Выйти</button>\n                </Route>\n            </nav>\n        </header >\n    )\n}\n\nexport default Header\n\n","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\n\r\n\r\nfunction Card(props) {\r\n    function handleClick() {\r\n        props.onClick(props.card);\r\n    }\r\n\r\n    function handleLikeClick() {\r\n        props.onCardLike(props.card)\r\n    }\r\n\r\n    function handleCardDelete() {\r\n        props.onCardDelete(props.card)\r\n    }\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const isOwn  = props.card.owner._id === currentUser._id;\r\n\r\n    const cardTrashButtonClassName = (\r\n        `element__trash ${isOwn  ? '' : 'element__trash_hidden'}`\r\n      );\r\n    \r\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n    const cardLikeButtonClassName = `element__button ${isLiked ? 'element__button_like-active' : ''}`;\r\n\r\n  \r\n\r\n    return (\r\n        <div className=\"element\" key={props.card._id}>\r\n            <img className=\"element__image\" alt=\"\" src={props.card.link} onClick={handleClick} />\r\n\r\n\r\n            <div className=\"element__places\">\r\n                <h2 className=\"element__place\">{props.card.name}</h2>\r\n                <div className=\"element__likeblock\">\r\n                    <button className={cardLikeButtonClassName}  onClick={handleLikeClick}></button>\r\n                    <p className=\"element__likecount\">{props.card.likes.length}</p>\r\n                </div>\r\n            </div>\r\n            <button className={cardTrashButtonClassName} type=\"button\"  onClick={handleCardDelete}></button>\r\n\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React from 'react';\n//import api from '../utils/api';\nimport Card from './Card';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\n\n\nfunction Main(props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__content\">\n                    <div className=\"profile__avatar-pics\">\n                        <img src={currentUser.avatar} className=\"profile__avatar\" alt=\"Жак-Ив Кусто\" />\n                        <button className=\"profile__edit\" onClick={props.onEditAvatar}></button>\n                    </div>\n\n                    <div className=\"profile__info\">\n                        <div className=\"profile__author\">\n                            <h2 className=\"profile__author-name\">{currentUser.name}</h2>\n                            <button className=\"profile__button-edit\" onClick={props.onEditProfile} aria-label=\"Редактировать\"></button>\n                        </div>\n                        <p className=\"profile__about\">{currentUser.about}</p>\n                    </div>\n                </div>\n                <button className=\"profile__button-add\" onClick={props.onAddPlace}></button>\n            </section>\n\n            <section className=\"elements\">\n                {props.cards.map(item => <Card key={item._id} card={item} onClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete}/>)}\n            </section>\n        </main>\n    )\n}\n\nexport default Main","import React from 'react';\n\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia Трошков Вадим</p>\n        </footer>\n    )\n}\n\nexport default Footer","export class Api{\r\n    constructor(options){\r\n        this.baseUrl = options.baseUrl;\r\n        this.headers = options.headers;\r\n    }\r\n\r\n\r\n\r\n    getInitialCards(){\r\n       return fetch(`${this.baseUrl}/cards`, {headers: this.headers})\r\n       .then(res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`)).catch(err => console.log(`Загрузка карточек: ${err}`));\r\n    }\r\n\r\n    getUserInfo(){\r\n        return fetch(`${this.baseUrl}/users/me`, {headers: this.headers})\r\n          .then(res => {\r\n            if (res.ok) {\r\n              return res.json();\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n          }).catch(err => console.log(`Загрузка информации о пользователе: ${err}`))\r\n      }\r\n\r\n    changeProfileInfo(input){\r\n      return fetch(`${this.baseUrl}/users/me`,\r\n      {\r\n        method: 'PATCH',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          name: input.author,\r\n          about: input.about\r\n        })\r\n      }\r\n      )\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }).catch(err => console.log(`Изменение информации: ${err}`));\r\n    }\r\n\r\n\r\n    addNewCard(input){\r\n      return fetch(`${this.baseUrl}/cards`,\r\n      {\r\n        method: 'POST',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          name: input.name,\r\n          link: input.link\r\n        })\r\n      }\r\n      )\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }).catch(err => console.log(`Добавление карточки: ${err}`));\r\n    }\r\n\r\n    putLike(cardId){\r\n      return fetch(`${this.baseUrl}/cards/likes/${cardId}`,{method: 'PUT', headers: this.headers})\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }).catch(err => console.log(`Лайк: ${err}`));\r\n    }\r\n\r\n    deleteLike(cardId){\r\n      return fetch(`${this.baseUrl}/cards/likes/${cardId}`,{method: 'DELETE', headers: this.headers})\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }).catch(err => console.log(`Дизлайк: ${err}`));\r\n    }\r\n\r\n    changeAvatar(input){\r\n      return fetch(`${this.baseUrl}/users/me/avatar`,\r\n      {\r\n        method: 'PATCH',\r\n        headers: this.headers,\r\n        body: JSON.stringify({\r\n          avatar: input.avatar\r\n        })\r\n      }\r\n      )\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }).catch(err => console.log(`Аватар: ${err}`));\r\n    }\r\n\r\n    deleteCard(cardId){\r\n      return fetch(`${this.baseUrl}/cards/${cardId}`, {method: 'DELETE', headers: this.headers})\r\n       .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }).catch(err => console.log(`Удаление: ${err}`));\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-13',\r\n  headers: {\r\n    authorization: '624c4e77-b79e-4ce9-9f2d-48e259657516',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\nexport default api","export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (email, password) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n    })\n        .then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        });\n};\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, password })\n    })\n        .then(res => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        });\n};\n\nexport const pingMe = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n        }\n    })\n        .then(res => res.json())\n        .then(data => data)\n}","import React from 'react';\r\n\r\n\r\nfunction PopupWithForm(props) {\r\n    return (\r\n        <div className={`popup popup_type_${props.name} ${props.isOpen && 'popup_opened'}`}>\r\n            <form className=\"popup-container\" name={props.name} noValidate  onSubmit={props.onSubmit}>\r\n                <fieldset className=\"popup__user-info\">\r\n                    <h3 className=\"popup-container__text\">{props.title}</h3>\r\n                    {props.children}\r\n                    <button className=\"popup-container__button-save\" type=\"submit\">{props.buttonName}</button>\r\n                </fieldset>\r\n                <button className=\"close-button popup-container__button-close\" id=\"close-button-avatarform\" type=\"reset\" onClick={props.onClose}></button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm","import React from 'react';\n\n\nfunction ImagePopup(props) {\n    return (\n        <div className={`popup popup_show_image ${props.card.isOpen && 'popup_opened'}`}>\n            <div className=\"popup-preview\">\n                <img className=\"popup-preview__picture\" alt={props.card.name} src={props.card.link} />\n                <p className=\"popup-preview__caption\">{props.card.name}</p>\n                <button className=\"close-button popup-preview__button-close\" id=\"close-button-picture\" type=\"reset\" onClick={props.onClose}></button>\n            </div>\n        </div>\n    )\n}\n\nexport default ImagePopup","import React from 'react';\r\nimport successPic from '../images/Success.svg';\r\nimport unsuccessPic from '../images/Unsuccess.svg';\r\n\r\nfunction InfoTooltip(props) {\r\n    return (\r\n        <div className={`popup ${props.isOpen && 'popup_opened'}`}>\r\n            <div className=\"popup-container\">\r\n                <div className=\"popup-container__infotooltip\">\r\n                    <img src={`${props.isLoggedIn ? successPic : unsuccessPic}`} className=\"popup-container__login_logo\" alt=\"Логин\" />\r\n                    <h3 className=\"popup-container__infotooltip-text\">{`${props.isLoggedIn ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте ещё раз.'}`}</h3>\r\n                </div>\r\n                <button className=\"close-button popup-container__button-close\" id=\"close-button-avatarform\" type=\"reset\" onClick={props.onClose}></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoTooltip","import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    function handleNameChange(e) {\n        setName(e.target.value);\n    }\n\n    function handleDescriptionChange(e) {\n        setDescription(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateUser({\n            author: name,\n            about: description\n        });\n    }\n\n  \n    return (\n        <PopupWithForm title=\"Редактировать профиль\" name=\"info\" buttonName=\"Сохранить\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}\n            children={\n                <>\n                    <input className=\"popup-container__infoform popup-container__infoform_author\" name=\"author\" id=\"name-input\" type=\"text\" required\n                        minLength=\"2\" maxLength=\"40\" pattern=\"[A-Za-zА-ЯЁа-яё -]{1,}\" placeholder=\"Автор\" defaultValue={name} onChange={handleNameChange} />\n\n                    <span className=\"popup__error\" id=\"author-input-error\"></span>\n\n                    <input className=\"popup-container__infoform popup-container__infoform_about\" name=\"about\" id=\"about-input\" type=\"text\" required\n                        minLength=\"2\" maxLength=\"200\" placeholder=\"Занятие\" defaultValue={description} onChange={handleDescriptionChange} />\n\n                    <span className=\"popup__error\" id=\"about-input-error\"></span>\n                </>\n            }\n        />\n    )\n}\n\nexport default EditProfilePopup","import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditAvatarPopup(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n    const avaRef = React.useRef();\n    const [avatar, setAvatar] = React.useState('');\n\n    React.useEffect(() => {\n        setAvatar(currentUser.avatar);\n    }, [currentUser]);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateAvatar({\n                avatar: avaRef.current.value\n            }\n        );\n    }\n\n    function handleAvatarChange(e) {\n        setAvatar(e.target.value);\n    }\n\n    return (\n        <PopupWithForm title=\"Обновить аватар\" name=\"avatar\" buttonName=\"Сохранить\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}\n            children={\n                <>\n                    <input className=\"popup-container__infoform popup-container__infoform_avatar\" name=\"avatar\" id=\"avatar-input\" type=\"url\"\n                        placeholder=\"Ссылка на аватар\" required defaultValue={avatar} ref={avaRef} onChange={handleAvatarChange} />\n                    <span className=\"popup__error\" id=\"avatar-input-error\"></span>\n                </>\n            }\n        />\n    )\n}\n\nexport default EditAvatarPopup","import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup(props) {\n    const inputName = React.useRef();\n    const inputLink = React.useRef();\n\n    function handleSubmit(e){\n        e.preventDefault();\n        props.onUpdatePlace({\n            name: inputName.current.value,\n            link: inputLink.current.value\n        });\n    }\n\n\n    return (\n        <PopupWithForm title=\"Новое место\" name=\"add\" buttonName=\"Создать\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={handleSubmit}\n                        children={\n                            <>\n                                <input className=\"popup-container__infoform popup-container__infoform_place-name\" name=\"place-name\" id=\"place-input\" type=\"text\"\n                                    placeholder=\"Название\" required minLength=\"1\" maxLength=\"30\" ref={inputName} />\n                                \n                                <span className=\"popup__error\" id=\"place-input-error\"></span>\n                                \n                                <input className=\"popup-container__infoform popup-container__infoform_place-link\" name=\"link\" id=\"link-input\" type=\"url\"\n                                    placeholder=\"Ссылка на картинку\" required ref={inputLink} />\n                                \n                                <span className=\"popup__error\" id=\"link-input-error\"></span>\n                            </>\n                        }\n                    />\n    )\n}\n\nexport default AddPlacePopup","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Login(props) {\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n\n    function handleEmailChange(e) {\n        setEmail(e.target.value);\n    }\n\n    function handlePasswordChange(e) {\n        setPassword(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (!email || !password) {\n            return;\n        }\n        props.onLogin(email, password, setEmail, setPassword);\n    }\n    return (\n        <main className=\"content\">\n            <form className=\"login\" onSubmit={handleSubmit}>\n                <h3 className=\"popup-container__title login__title\">Вход</h3>\n                <input className=\"popup-container__item login__item popup-container__item_email\" name=\"userEmail\" id=\"email-input\" type=\"email\" required\n                    placeholder=\"Email\" onChange={handleEmailChange} />\n                <span className=\"popup__error\" id=\"email-input-error\"></span>\n                <input className=\"popup-container__item login__item popup-container__item_password\" name=\"userPassword\" id=\"password-input\" type=\"password\"\n                    required placeholder=\"Пароль\" onChange={handlePasswordChange} />\n                <span className=\"popup__error\" id=\"password-input-error\"></span>\n                <button className=\"popup-container__button login__button\" type=\"submit\">Войти</button>\n                <Link to='/sign-up' className=\"login__link\">Ещё не зарегистрированы? Регистрация</Link>\n            </form>\n        </main>\n    );\n}\n\nexport default Login","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Register(props) {\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n\n    function handleEmailChange(e) {\n        setEmail(e.target.value);\n    }\n\n    function handlePasswordChange(e) {\n        setPassword(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onSignup(email, password);\n    }\n    return (\n        <main className=\"content\">\n            <form className=\"login\" onSubmit={handleSubmit}>\n                <h3 className=\"popup-container__title login__title\">Регистрация</h3>\n                <input className=\"popup-container__item login__item popup-container__item_email\" name=\"userEmail\" id=\"email-input\" type=\"email\" required\n                    placeholder=\"Email\" onChange={handleEmailChange} />\n                <span className=\"popup__error\" id=\"email-input-error\"></span>\n                <input className=\"popup-container__item login__item popup-container__item_password\" name=\"userPassword\" id=\"password-input\" type=\"password\"\n                    required placeholder=\"Пароль\" onChange={handlePasswordChange} />\n                <span className=\"popup__error\" id=\"password-input-error\"></span>\n                <button className=\"popup-container__button login__button\" type=\"submit\">Зарегистрироваться</button>\n                <Link to='/sign-in' className=\"login__link\">Уже зарегистрированы? Войти</Link>\n            </form>\n        </main>\n    );\n}\n\nexport default Register","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...props  }) => {\n  return (\n    <Route>\n      {\n        () => props.loggedIn ? <Component {...props} /> : <Redirect to=\"./sign-in\" />\n      }\n    </Route>\n)}\n\nexport default ProtectedRoute;","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport api from '../utils/api';\nimport * as Auth from '../utils/auth';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport InfoTooltip from './InfoTooltip';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\n\nimport Login from './Login';\nimport Register from './Register';\n\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\n\nimport ProtectedRoute from './ProtectedRoute';\n\nfunction App() {\n\n\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n\n    const [loggedIn, setLoggedIn] = React.useState(false);\n    const [user, setUser] = React.useState('');\n\n\n    const history = useHistory();\n\n    const [selectedCard, setSelectedCard] = React.useState({\n        isOpen: false,\n        link: '',\n        name: ''\n    });\n\n    const [cards, setCards] = React.useState([]);\n\n    const [currentUser, setCurrentUser] = React.useState({});\n\n    React.useEffect(() => {\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\n            .then(([user, initialCards]) => {\n                setCurrentUser(user);\n                setCards([...initialCards]);\n            })\n            .catch(err => console.log(err));\n    }, [])\n\n    function signOut() {\n        localStorage.removeItem('jwt');\n        setLoggedIn(false);\n        setUser('');\n        history.push('/sign-in');\n    }\n\n\n    function logIn(email, password, setEmail, setPassword) {\n        Auth.authorize(email, password)\n            .then(res => {\n                localStorage.setItem('jwt', res.token);\n                setUser(email);\n                setEmail('');\n                setPassword('');\n                handleLogin();\n                history.push('/cards');\n                handleInfoTooltip();\n            })\n            .catch(err => handleInfoTooltip());\n    }\n\n    function signUp(email, password) {\n        Auth.register(email, password).then((res) => {\n            if (res) {\n                history.push('/cards');\n            } else {\n                console.log(\"Регистрация не прошла!\");\n            }\n        })\n            .catch(err => handleInfoTooltip());\n    }\n\n    function handleLogin() {\n        setLoggedIn(true);\n    }\n\n    function handleInfoTooltip() {\n        setIsInfoTooltipOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n\n    function handleCardClick(props) {\n        setSelectedCard({\n            isOpen: true,\n            name: props.name,\n            link: props.link\n        });\n    }\n\n    function handleUpdateAvatar(data) {\n        api.changeAvatar(data)\n            .then((newData) => {\n                setCurrentUser(newData);\n                closePopups();\n            })\n            .catch((err) => {\n                console.log(`Ошибка: ${err}`);\n            })\n    }\n\n    function handleUpdateUser(data) {\n        api.changeProfileInfo(data)\n            .then((newData) => {\n                setCurrentUser(newData);\n                closePopups();\n            })\n            .catch((err) => {\n                console.log(`Ошибка: ${err}`);\n            })\n    }\n\n\n    function handleUpdateCards(data) {\n        api.addNewCard(data)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closePopups();\n            })\n            .catch((err) => {\n                console.log(`Ошибка: ${err}`);\n            })\n    }\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        (!isLiked ? api.putLike(card._id) : api.deleteLike(card._id))\n            .then((newCard) => {\n                const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n                setCards(newCards);\n            })\n            .catch(err => console.log(err));\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                const newCards = cards.filter((c) => c._id !== card._id);\n                setCards(newCards);\n            })\n            .catch(err => console.log(err));\n    }\n\n    function closePopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setSelectedCard(false);\n        setIsInfoTooltipOpen(false);\n    }\n\n\n    const tokenCheck = () => {\n        const jwt = localStorage.getItem('jwt');\n        if (jwt) {\n            Auth.pingMe(jwt).then((res) => {\n                if (res) {\n                    setUser(res.data.email);\n                    setLoggedIn(true);\n                    history.push('/cards');\n                }\n            });\n        }\n    }\n\n    React.useEffect(() => {\n        tokenCheck();\n    }, );\n\n\n    return (\n        <>\n            <CurrentUserContext.Provider value={currentUser}>\n                <Header onSignOut={signOut} user={user} isLoggedIn={loggedIn} />\n                <Switch>\n                    <ProtectedRoute path=\"/cards\" component={Main} loggedIn={loggedIn}\n                        cards={cards}\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onEditAvatar={handleEditAvatarClick}\n                        onCardClick={handleCardClick}\n                        onCardDelete={handleCardDelete}\n                        onCardLike={handleCardLike} />\n                    <Route path=\"/sign-in\">\n                        <Login onLogin={logIn} />\n                    </Route>\n                    <Route path=\"/sign-up\">\n                        <Register onSignup={signUp} />\n                    </Route>\n                    <Route>\n                        {<Redirect to={`/${loggedIn ? 'cards' : 'sign-in'}`} />}\n                    </Route>\n                </Switch>\n\n                <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closePopups} onUpdateAvatar={handleUpdateAvatar} />\n\n                <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closePopups} onUpdateUser={handleUpdateUser} />\n\n                <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closePopups} onUpdatePlace={handleUpdateCards} />\n\n                <PopupWithForm title=\"Вы уверены?\" name=\"delete\" buttonName=\"Да\" onClose={closePopups} />\n\n                <ImagePopup card={selectedCard} onClose={closePopups} />\n\n                <InfoTooltip isLoggedIn={loggedIn} isOpen={isInfoTooltipOpen} onClose={closePopups} />\n                \n                <Footer />\n            </CurrentUserContext.Provider>\n        </>\n    );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n     <div className=\"page\">\n    <BrowserRouter >\n    <App />\n    </BrowserRouter>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}